from __future__ import with_statement
import sqlite3
from contextlib import closing
from flask import Flask, request, session, g, redirect, url_for, abort, render_template, flash

#configuration

DATABASE = '/tmp/blog.db'
DEBUG = True
SECRET_KEY = 'development key'
USERNAME = 'fnava621'
PASSWORD = 'default'


app = Flask(__name__);
app.config.from_object(__name__)
app.config.from_envvar('BLOG_SETTINGS', silent=True)

def connect_db():
  return sqlite3.connect(app.config['DATABASE'])

def init_db():
  with closing(connect_db()) as db:
    with app.open_resource('schema.sql') as f:
      db.cursor().executescript(f.read())
    db.commit()

@app.before_request
def before_request():
  g.db = connect_db()

@app.teardown_request
def teardown_request(exception):
  g.db.close()


@app.route('/')
def blog():
  cur = g.db.execute('select title, text from entries order by id desc')
  entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
  return render_template('home.html', entries=entries)

@app.route('/add', methods=['POST'])
def add_entry():
  if not session.get('logged_in'):
    abort(401)
  g.db.execute('insert into entries (title, text) values (?, ?)', 
               [request.form['title'], request.form['text']])
  g.db.commit()
  flash("SUCESS!")
  return redirect(url_for('blog'))


@app.route('/login', methods=['GET','POST'])
def login():
  error = None
  if request.method == 'POST':
    if request.form['username'] != app.config['USERNAME']:
      error = "Invalid username"
    elif request.form['password'] != app.config['PASSWORD']:
      error = "Invalid Password"
    else:
      session['logged_in'] = True
      flash('You Were Logged In')
      return redirect(url_for('blog'))
  return render_template('login.html', error = error)

@app.route('/logout')
def logout():
  session.pop('logged_in', None)
  flash('You Were Logged Out YO!')
  return redirect(url_for('blog'))


if __name__ == '__main__':
  app.run()

